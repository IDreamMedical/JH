<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
  mc:Ignorable="d"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008">

    <SolidColorBrush x:Key="ArrowBrush" Color="#cfcfcf" />

    <LinearGradientBrush x:Key="BackgroundBrush" EndPoint="0,0" StartPoint="0,1">
        <GradientStop Color="#f4f4f4" Offset="0"/>
        <GradientStop Color="#d7d7d7" Offset="0.7"/>
        <GradientStop Color="#c2c2c2" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="BackgroundBrushPopUp" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#727272" Offset="1"/>
        <GradientStop Color="#4c4c4c" Offset="0"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#F3F3F3" Offset="0"/>
        <GradientStop Color="#EBEBEB" Offset="0.5"/>
        <GradientStop Color="#DDDDDD" Offset="0.5"/>
        <GradientStop Color="#CDCDCD" Offset="1"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="BorderBrush" Color="#cfcfcf" />

    <LinearGradientBrush x:Key="ClickBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#d22828" Offset="1"/>
        <GradientStop Color="#b00000" Offset="0"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="DisabledBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#f4f4f4" Offset="0"/>
        <GradientStop Color="#d7d7d7" Offset="0.7"/>
        <GradientStop Color="#c2c2c2" Offset="1"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="DisabledBorderBrush" Color="#FF919191" />

    <SolidColorBrush x:Key="DisabledForeground" Color="#aaaaaa" />

    <LinearGradientBrush x:Key="DisabledHeaderBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#f4f4f4" Offset="0"/>
        <GradientStop Color="#d7d7d7" Offset="0.7"/>
        <GradientStop Color="#c2c2c2" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="GlassBrush" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#96FFFFFF" Offset="0"/>
        <GradientStop Color="#28FFFFFF" Offset="0.5"/>
        <GradientStop Color="#00FFFFFF" Offset="0.5"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="HeaderBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#6c6a6b" Offset="0"/>
        <GradientStop Color="#282828" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="HoverBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#da5e69" Offset="0"/>
        <GradientStop Color="#d12e27" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="HoverBorderBrush" Color="#d12e27" />
    <LinearGradientBrush x:Key="HoverToggleBackground" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="#da5e69" Offset="0"/>
        <GradientStop Color="#d12e27" Offset="1"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="InnerBorderDisabled" Color="#b8b8b8"/>

    <LinearGradientBrush x:Key="MenuBackground" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#727272" Offset="0"/>
        <GradientStop Color="#323230" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="MenuBackgroundHover" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="#65da5e69" Offset="0"/>
        <GradientStop Color="#65d12e27" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="MenuSelected" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#da5e69" Offset="0"/>
        <GradientStop Color="#d12e27" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="MenuBorder" Color="#5c5e5b"/>
    <SolidColorBrush x:Key="MenuBorderHover" Color="#d12e27"/>
    <SolidColorBrush x:Key="MenuInnerBorder" Color="#65d12e27"/>
    <SolidColorBrush x:Key="MenuForeground" Color="White"/>
    <SolidColorBrush x:Key="MenuItemBackground" Color="#727272"/>
    <SolidColorBrush x:Key="MenuItemIconBackground" Color="#323230"/>
    <LinearGradientBrush x:Key="MenuItemSelectionFill" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#34C5EBFF" Offset="0"/>
        <GradientStop Color="#3481D8FF" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="MenuItemPressedFill" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#28717070" Offset="0"/>
        <GradientStop Color="#50717070" Offset="0.75"/>
        <GradientStop Color="#90717070" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="NormalBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#727272" Offset="0"/>
        <GradientStop Color="#4c4c4c" Offset="1"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="NormalOuterBorder" Color="#7a7a7a"/>
    <SolidColorBrush x:Key="NormalInnerBorder" Color="#454545"/>

    <SolidColorBrush x:Key="OuterBorderDisabled" Color="#cfcfcf"/>

    <LinearGradientBrush x:Key="OverBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#da5e69" Offset="0"/>
        <GradientStop Color="#d12e27" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ProgressBarBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#626262" Offset="1"/>
        <GradientStop Color="#4c4c4c" Offset="0"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ProgressBarBorderBrush" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#B2B2B2" Offset="0"/>
        <GradientStop Color="#8C8C8C" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="IndicatorBrush" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#727272" Offset="0"/>
        <GradientStop Color="#4c4c4c" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ProgressBarGlassyHighlight" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#50FFFFFF" Offset="0.5385"/>
        <GradientStop Color="#00FFFFFF" Offset="0.5385"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ProgressBarTopHighlight" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#80FFFFFF" Offset="0.05"/>
        <GradientStop Color="#00FFFFFF" Offset="0.25"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill2" EndPoint="0,0" StartPoint="-100,0" MappingMode="Absolute">
        <GradientStop Color="#00000000" Offset="0"/>
        <GradientStop Color="#FF000000" Offset="0.4"/>
        <GradientStop Color="#FF000000" Offset="0.6"/>
        <GradientStop Color="#00000000" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ProgressBarIndicatorDarkEdgeLeft" EndPoint="1,0" StartPoint="0,0">
        <GradientStop Color="#0C000000" Offset="0"/>
        <GradientStop Color="#20000000" Offset="0.3"/>
        <GradientStop Color="#00000000" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ProgressBarIndicatorDarkEdgeRight" EndPoint="1,0" StartPoint="0,0">
        <GradientStop Color="#96FFFFFF" Offset="0"/>
        <GradientStop Color="#28FFFFFF" Offset="0.5"/>
        <GradientStop Color="#00FFFFFF" Offset="0.5"/>
    </LinearGradientBrush>
    <RadialGradientBrush x:Key="ProgressBarIndicatorLightingEffectLeft" RelativeTransform="1,0,0,1,0.5,0.5" RadiusX="1" RadiusY="1">
        <GradientStop Color="#96FFFFFF" Offset="0"/>
        <GradientStop Color="#28FFFFFF" Offset="0.5"/>
        <GradientStop Color="#00FFFFFF" Offset="0.5"/>
    </RadialGradientBrush>
    <LinearGradientBrush x:Key="ProgressBarIndicatorLightingEffect" EndPoint="0,0" StartPoint="0,1">
        <GradientStop Color="#60FFFFC4" Offset="0"/>
        <GradientStop Color="#00FFFFC4" Offset="1"/>
    </LinearGradientBrush>
    <RadialGradientBrush x:Key="ProgressBarIndicatorLightingEffectRight" RelativeTransform="1,0,0,1,-0.5,0.5" RadiusX="1" RadiusY="1">
        <GradientStop Color="#60FFFFC4" Offset="0"/>
        <GradientStop Color="#00FFFFC4" Offset="1"/>
    </RadialGradientBrush>
    <LinearGradientBrush x:Key="ProgressBarIndicatorGlassyHighlight" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#90FFFFFF" Offset="0.5385"/>
        <GradientStop Color="#00FFFFFF" Offset="0.5385"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="TabControlOuterBorder" Color="#121011"/>
    <SolidColorBrush x:Key="TabControlInnerBorder" Color="#5c5e5b"/>
    <SolidColorBrush x:Key="TabControlBackground" Color="#323230"/>
    <SolidColorBrush x:Key="TabControlOuterBorderDisabled" Color="#b8b8b8"/>
    <SolidColorBrush x:Key="TabControlInnerBorderDisabled" Color="#cfcfcf"/>
    <SolidColorBrush x:Key="TabControlDisabledBackground" Color="#b4b4b4"/>
    <SolidColorBrush x:Key="TabControlNormalBorderBrush" Color="#8C8E94"/>

    <LinearGradientBrush x:Key="TabItemHotBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#e68e8c" Offset="0"/>
        <GradientStop Color="#c32a2a" Offset="0.7"/>
        <GradientStop Color="#323230" Offset="1"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="TabItemSelectedBackground" Color="#F9F9F9"/>
    <SolidColorBrush x:Key="TabItemHotBorderBrush" Color="#3C7FB1"/>
    <SolidColorBrush x:Key="TabItemDisabledBorderBrush" Color="#FFC9C7BA"/>

    <LinearGradientBrush x:Key="TabItemBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FF949494" Offset="1"/>
        <GradientStop Color="#323230" Offset="0"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TabItemHoverBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FF949494" Offset="0"/>
        <GradientStop Color="#323230" Offset="0.8"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TabItemSideBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#e68e8c" Offset="0"/>
        <GradientStop Color="#c32a2a" Offset="0.7"/>
        <GradientStop Color="#323230" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TabItemSideBackgroundBottom" EndPoint="0,0" StartPoint="0,1">
        <GradientStop Color="#e68e8c" Offset="0"/>
        <GradientStop Color="#c32a2a" Offset="0.7"/>
        <GradientStop Color="#323230" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TabItemSideBorderBrush" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#e8a7a5" Offset="0"/>
        <GradientStop Color="#e8a7a5" Offset="0.7"/>
        <GradientStop Color="#323230" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TabItemGlassBrush" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#96FFFFFF" Offset="0"/>
        <GradientStop Color="#28FFFFFF" Offset="0.5"/>
        <GradientStop Color="#00FFFFFF" Offset="0.5"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TabItemDisabledBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#b4b4b4" Offset="1"/>
        <GradientStop Color="#dfdfdf" Offset="0"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TabItemSideDisabledBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#f4f4f4" Offset="0"/>
        <GradientStop Color="#d7d7d7" Offset="0.7"/>
        <GradientStop Color="#c2c2c2" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="TextBoxBorder" EndPoint="0,20" StartPoint="0,0" MappingMode="Absolute">
        <GradientStop Color="#ABADB3" Offset="0.05"/>
        <GradientStop Color="#E2E3EA" Offset="0.07"/>
        <GradientStop Color="#E3E9EF" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="FocusedBorder" Color="#cfcfcf"/>

    <SolidColorBrush x:Key="ListBorder" Color="#828790"/>

    <!-- =====Button===== -->
    <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle SnapsToDevicePixels="true" Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1" Margin="2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource NormalBackground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Height" Value="23"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="OuterBd" CornerRadius="3" BorderBrush="{StaticResource NormalOuterBorder}" BorderThickness="1" Background="{StaticResource NormalBackground}">
                            <Border x:Name="InnerBd" CornerRadius="2" BorderBrush="{StaticResource NormalInnerBorder}" BorderThickness="1">
                                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
                            </Border>
                        </Border>
                        <Border x:Name="Glass" Margin="2" Background="{StaticResource GlassBrush}" CornerRadius="2"/>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="OuterBd" Property="Background" Value="{StaticResource OverBackground}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="OuterBd" Property="Background" Value="{StaticResource ClickBackground}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="InnerBd" Property="BorderBrush" Value="#d12e27"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="InnerBd" Property="BorderBrush" Value="{StaticResource InnerBorderDisabled}"/>
                            <Setter TargetName="OuterBd" Property="BorderBrush" Value="{StaticResource OuterBorderDisabled}"/>
                            <Setter TargetName="OuterBd" Property="Background" Value="{StaticResource DisabledBackground}"/>
                            <Setter Property="Foreground" Value="{StaticResource InnerBorderDisabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- =====ComboBox===== -->
    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
        <Grid>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border
        x:Name="Border" 
        Grid.ColumnSpan="2"
        CornerRadius="3"
        Background="{StaticResource HoverToggleBackground}"
        BorderBrush="{StaticResource BorderBrush}"
        BorderThickness="1" />
                <Border x:Name="BorderToggle"
        Grid.Column="0"
        CornerRadius="3,0,0,3" 
		Background="{StaticResource BackgroundBrush}"
        BorderBrush="{StaticResource BorderBrush}"
        Margin="1" 
        BorderThickness="0,0,1,0" />
                <Path 
        x:Name="Arrow"
        Grid.Column="1"     
        Fill="{StaticResource ArrowBrush}"
        HorizontalAlignment="Center"
        VerticalAlignment="Center"
        Data="M 0 0 L 4 4 L 8 0 Z"/>
            </Grid>
            <Border Background="{StaticResource GlassBrush}" Margin="2" CornerRadius="3"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource HoverToggleBackground}" />
                <Setter TargetName="Border" Property="BorderThickness" Value="1" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}" />


            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackground}" />
                <Setter TargetName="BorderToggle" Property="Background" Value="{StaticResource DisabledBackground}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                <Setter Property="Foreground" Value="{StaticResource DisabledForeground}"/>
                <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource DisabledBorderBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>

    <Style x:Key="{x:Type ComboBox}" TargetType="ComboBox">
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="18"/>
        <Setter Property="FontFamily" Value="Calibri"/>
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="Padding" Value="4,0,0,0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Foreground" Value="{StaticResource BorderBrush}"/>
        <Setter Property="IsSynchronizedWithCurrentItem" Value="False"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel IsVirtualizing="True"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>


        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton 
              Name="ToggleButton" 
              Template="{StaticResource ComboBoxToggleButton}" 
              Grid.Column="2" 
              Focusable="false"
              IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
              ClickMode="Press">
                        </ToggleButton>
                        <ContentPresenter
              Name="ContentSite"
              IsHitTestVisible="False" 
              Content="{TemplateBinding SelectionBoxItem}"
              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
              Margin="3,3,23,3"
              VerticalAlignment="Center"
              HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox"
              Style="{x:Null}" 
              Template="{StaticResource ComboBoxTextBox}" 
              HorizontalAlignment="Left" 
              VerticalAlignment="Center" 
              Margin="3,3,23,3"
              Focusable="True" 
              Background="Transparent"
              Visibility="Hidden"
              IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup 
              Name="Popup"
              Placement="Bottom"
              IsOpen="{TemplateBinding IsDropDownOpen}"
              AllowsTransparency="True" 
              Focusable="False"
              PopupAnimation="Slide" Margin="3,-8,-3,8">
                            <Grid 
                Name="DropDown"
                SnapsToDevicePixels="True"                
                MinWidth="{TemplateBinding ActualWidth}"
                MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border 
                  x:Name="DropDownBorder"
                  Background="{StaticResource BackgroundBrushPopUp}"
                  BorderThickness="1,1,1,1" CornerRadius="3" Margin="0,3,0,3"
                  BorderBrush="{StaticResource BorderBrush}"/>
                                <ScrollViewer Margin="0,3" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForeground}"/>
                            <Setter Property="Background" Value="{StaticResource DisabledBackground}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                        </Trigger>
                        <Trigger Property="IsEditable"
                 Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility"	Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>

    <!-- SimpleStyles: ComboBoxItem -->
    <Style x:Key="{x:Type ComboBoxItem}" TargetType="ComboBoxItem">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border 
            Name="Border"
            Padding="2"
			BorderThickness="1"
            SnapsToDevicePixels="true">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource HoverToggleBackground}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForeground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- =====GroupBox===== -->
    <BorderGapMaskConverter x:Key="BorderGapMaskConverter"/>
    <Style TargetType="{x:Type GroupBox}">
        <Setter Property="BorderBrush" Value="#D5DFE5"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="4"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Border x:Name="Header" Grid.Column="0" Grid.Row="0" Padding="3" Background="{StaticResource HeaderBackground}" CornerRadius="4,4,0,0" BorderBrush="{StaticResource NormalOuterBorder}" BorderThickness="1,1,1,0">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ContentSource="Header" RecognizesAccessKey="True"/>
                        </Border>
                        <Border x:Name="Glass" Grid.Column="0" Grid.Row="0" Margin="2" Background="{StaticResource GlassBrush}" CornerRadius="4,4,0,0"/>
                        <Border x:Name="Container" Grid.Column="0" Grid.Row="1" Padding="3" CornerRadius="0,0,4,4" Background="{StaticResource NormalBackground}" BorderBrush="{StaticResource NormalOuterBorder}" BorderThickness="1,1,1,1">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="{TemplateBinding Padding}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Header" Property="Background" Value="{StaticResource DisabledHeaderBackground}"/>
                            <Setter TargetName="Container" Property="Background" Value="{StaticResource DisabledBackground}"/>
                            <Setter Property="Foreground" Value="{StaticResource NormalOuterBorder}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <!-- =====Menu===== -->
    <Style TargetType="{x:Type Menu}">
        <Setter Property="Background" Value="{StaticResource MenuBackground}"/>
        <Setter Property="Foreground" Value="{StaticResource MenuForeground}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{StaticResource MenuBorder}" BorderThickness="0,0,0,1" Padding="{TemplateBinding Padding}">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Geometry x:Key="Checkmark">M 0,5.1 L 1.7,5.2 L 3.4,7.1 L 8,0.4 L 9.2,0 L 3.3,10.8 Z</Geometry>

    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
        <Grid SnapsToDevicePixels="true">
            <Rectangle x:Name="Bg" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" RadiusX="2" RadiusY="2"/>
            <Rectangle Margin="1" x:Name="InnerBorder" RadiusX="2" RadiusY="2"/>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                    <ColumnDefinition Width="4"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="37"/>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                    <ColumnDefinition Width="17"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="1" x:Name="Icon" VerticalAlignment="Center" ContentSource="Icon"/>
                <Border Visibility="Hidden" Margin="1" x:Name="GlyphPanel" Width="22" Height="22" Background="#E6EFF4" BorderBrush="#CDD3E6" BorderThickness="1" CornerRadius="3">
                    <Path FlowDirection="LeftToRight" x:Name="Glyph" Width="9" Height="11" Fill="#0C12A1" Data="{StaticResource Checkmark}"/>
                </Border>
                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="{TemplateBinding Padding}" Grid.Column="2" ContentSource="Header" RecognizesAccessKey="True"/>
                <TextBlock Margin="{TemplateBinding Padding}" Grid.Column="4" Text="{TemplateBinding InputGestureText}"/>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Fill" TargetName="Bg" Value="{StaticResource MenuBackgroundHover}"/>
                <Setter Property="Stroke" TargetName="Bg" Value="{StaticResource MenuBorderHover}"/>
                <Setter Property="Stroke" TargetName="InnerBorder" Value="#FFFFFF"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="#FF9A9A9A"/>
                <Setter Property="Background" TargetName="GlyphPanel" Value="#EEE9E9"/>
                <Setter Property="BorderBrush" TargetName="GlyphPanel" Value="#DBD6D6"/>
                <Setter Property="Fill" TargetName="Glyph" Value="#848589"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuContent, TypeInTargetAssembly={x:Type FrameworkElement}}" TargetType="{x:Type ContentControl}">
        <Border Background="{StaticResource MenuItemBackground}" BorderBrush="{StaticResource MenuBorder}" BorderThickness="1">
            <Grid>
                <Rectangle HorizontalAlignment="Left" Margin="2" Width="28" Fill="{StaticResource MenuItemIconBackground}" RadiusX="2" RadiusY="2"/>
                <Rectangle HorizontalAlignment="Left" Margin="30,2,0,2" Width="1" Fill="Transparent"/>
                <Rectangle HorizontalAlignment="Left" Margin="31,2,0,2" Width="1" Fill="Transparent"/>
                <ContentPresenter Margin="1,0" Grid.ColumnSpan="2"/>
            </Grid>
        </Border>
    </ControlTemplate>
    <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter"/>
    <Style x:Key="MenuScrollButton" BasedOn="{x:Null}" TargetType="{x:Type RepeatButton}">
        <Setter Property="ClickMode" Value="Hover"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <DockPanel SnapsToDevicePixels="true" Background="Transparent">
                        <Rectangle x:Name="R1" Width="1" Fill="Transparent" DockPanel.Dock="Right"/>
                        <Rectangle x:Name="B1" Height="1" Fill="Transparent" DockPanel.Dock="Bottom"/>
                        <Rectangle x:Name="L1" Width="1" Fill="Transparent" DockPanel.Dock="Left"/>
                        <Rectangle x:Name="T1" Height="1" Fill="Transparent" DockPanel.Dock="Top"/>
                        <ContentPresenter HorizontalAlignment="Center" Margin="2,2,2,2" x:Name="ContentContainer" VerticalAlignment="Center"/>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Fill" TargetName="R1" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                            <Setter Property="Fill" TargetName="B1" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                            <Setter Property="Fill" TargetName="L1" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
                            <Setter Property="Fill" TargetName="T1" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
                            <Setter Property="Margin" TargetName="ContentContainer" Value="3,3,1,1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Geometry x:Key="UpArrow">M 0,4 L 3.5,0 L 7,4 Z</Geometry>
    <Geometry x:Key="DownArrow">M 0,0 L 3.5,4 L 7,0 Z</Geometry>
    <Style x:Key="{ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}" BasedOn="{x:Null}" TargetType="{x:Type ScrollViewer}">
        <Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Border Grid.Column="0" Grid.Row="1">
                            <ScrollContentPresenter Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <RepeatButton Focusable="false" Style="{StaticResource MenuScrollButton}" Grid.Column="0" Grid.Row="0" Command="{x:Static ScrollBar.LineUpCommand}" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                            <RepeatButton.Visibility>
                                <MultiBinding FallbackValue="Visibility.Collapsed" Converter="{StaticResource MenuScrollingVisibilityConverter}" ConverterParameter="0">
                                    <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Data="{StaticResource UpArrow}"/>
                        </RepeatButton>
                        <RepeatButton Focusable="false" Style="{StaticResource MenuScrollButton}" Grid.Column="0" Grid.Row="2" Command="{x:Static ScrollBar.LineDownCommand}" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                            <RepeatButton.Visibility>
                                <MultiBinding FallbackValue="Visibility.Collapsed" Converter="{StaticResource MenuScrollingVisibilityConverter}" ConverterParameter="100">
                                    <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Data="{StaticResource DownArrow}"/>
                        </RepeatButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
        <Grid SnapsToDevicePixels="true">
            <Rectangle x:Name="OuterBorder" RadiusX="0" RadiusY="0"/>
            <Rectangle Margin="0" x:Name="Bg" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" RadiusX="1" RadiusY="1"/>
            <Rectangle Margin="1" x:Name="InnerBorder"/>
            <DockPanel>
                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="4,0,6,0" x:Name="Icon" VerticalAlignment="Center" ContentSource="Icon"/>
                <Path Visibility="Collapsed" FlowDirection="LeftToRight" Margin="7,0,0,0" x:Name="GlyphPanel" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="{StaticResource Checkmark}"/>
                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="{TemplateBinding Padding}" ContentSource="Header" RecognizesAccessKey="True"/>
            </DockPanel>
            <Popup Focusable="false" AllowsTransparency="true" HorizontalOffset="1" IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" VerticalOffset="-1" x:Name="PART_Popup">
                <!--<Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent">-->
                <ContentControl IsTabStop="false" x:Name="SubMenuBorder" Template="{DynamicResource {ComponentResourceKey ResourceId=SubmenuContent, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                    <ScrollViewer Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}" CanContentScroll="true">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="2" Grid.IsSharedSizeScope="true" KeyboardNavigation.DirectionalNavigation="Cycle" KeyboardNavigation.TabNavigation="Cycle"/>
                    </ScrollViewer>
                </ContentControl>
                <!--</Microsoft_Windows_Themes:SystemDropShadowChrome>-->
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <!--<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
					<Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
					<Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
				</Trigger>-->
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Fill" TargetName="InnerBorder" Value="{StaticResource MenuBackgroundHover}"/>
                <Setter Property="Stroke" TargetName="InnerBorder" Value="{StaticResource MenuBorderHover}"/>
                <!--<Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource MenuBorder}"/>-->
            </Trigger>
            <!--<Trigger Property="IsKeyboardFocused" Value="true">
					<Setter Property="Stroke" TargetName="Bg" Value="#E0717070"/>
					<Setter Property="Fill" TargetName="Bg" Value="{StaticResource MenuItemPressedFill}"/>
					<Setter Property="Stroke" TargetName="InnerBorder" Value="#50747272"/>
				</Trigger>-->
            <Trigger Property="IsSubmenuOpen" Value="true">
                <Setter Property="Fill" TargetName="OuterBorder" Value="{StaticResource MenuSelected}"/>
                <Setter Property="Fill" TargetName="InnerBorder" Value="Transparent"/>
                <Setter Property="Stroke" TargetName="InnerBorder" Value="{StaticResource MenuInnerBorder}"/>
                <Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource MenuBorderHover}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="#FF9A9A9A"/>
                <Setter Property="Fill" TargetName="GlyphPanel" Value="#848589"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
        <Grid SnapsToDevicePixels="true">
            <Rectangle x:Name="OuterBorder" RadiusX="2" RadiusY="2"/>
            <Rectangle Margin="1" x:Name="Bg" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" RadiusX="1" RadiusY="1"/>
            <Rectangle Margin="2" x:Name="InnerBorder"/>
            <DockPanel>
                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="4,0,6,0" x:Name="Icon" VerticalAlignment="Center" ContentSource="Icon"/>
                <Path Visibility="Collapsed" FlowDirection="LeftToRight" Margin="7,0,0,0" x:Name="GlyphPanel" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="{StaticResource Checkmark}"/>
                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="{TemplateBinding Padding}" ContentSource="Header" RecognizesAccessKey="True"/>
            </DockPanel>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Stroke" TargetName="Bg" Value="#90717070"/>
                <Setter Property="Stroke" TargetName="OuterBorder" Value="#50FFFFFF"/>
                <Setter Property="Stroke" TargetName="InnerBorder" Value="#50FFFFFF"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="true">
                <Setter Property="Stroke" TargetName="Bg" Value="#E0717070"/>
                <Setter Property="Fill" TargetName="Bg" Value="{StaticResource MenuItemPressedFill}"/>
                <Setter Property="Stroke" TargetName="InnerBorder" Value="#50747272"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="#FF9A9A9A"/>
                <Setter Property="Fill" TargetName="GlyphPanel" Value="#848589"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Geometry x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>


    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
        <Grid SnapsToDevicePixels="true">
            <Rectangle x:Name="Bg" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" RadiusX="2" RadiusY="2"/>
            <Rectangle Margin="1" x:Name="InnerBorder" Stroke="Transparent" StrokeThickness="1" RadiusX="2" RadiusY="2"/>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                    <ColumnDefinition Width="4"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="37"/>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                    <ColumnDefinition Width="17"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="1" x:Name="Icon" VerticalAlignment="Center" ContentSource="Icon"/>
                <Border Visibility="Hidden" Margin="1" x:Name="GlyphPanel" Width="22" Height="22" Background="#E6EFF4" BorderBrush="#CDD3E6" BorderThickness="1" CornerRadius="3">
                    <Path FlowDirection="LeftToRight" x:Name="Glyph" Width="9" Height="11" Fill="#0C12A1" Data="{StaticResource Checkmark}"/>
                </Border>
                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="{TemplateBinding Padding}" Grid.Column="2" ContentSource="Header" RecognizesAccessKey="True"/>
                <TextBlock Visibility="Collapsed" Margin="{TemplateBinding Padding}" Grid.Column="4" Text="{TemplateBinding InputGestureText}"/>
                <Path Margin="4,0,0,0" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Grid.Column="5" Data="{StaticResource RightArrow}"/>
            </Grid>
            <Popup Focusable="false" AllowsTransparency="true" HorizontalOffset="-2" IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" VerticalOffset="-3" x:Name="PART_Popup">

                <!--<Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent">-->
                <ContentControl IsTabStop="false" Template="{DynamicResource {ComponentResourceKey ResourceId=SubmenuContent, TypeInTargetAssembly={x:Type FrameworkElement}}}" x:Name="SubMenuBorder">
                    <ScrollViewer Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}" CanContentScroll="true">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="2" Grid.IsSharedSizeScope="true" KeyboardNavigation.DirectionalNavigation="Cycle" KeyboardNavigation.TabNavigation="Cycle"/>
                    </ScrollViewer>
                </ContentControl>
                <!--</Microsoft_Windows_Themes:SystemDropShadowChrome>-->
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Stroke" TargetName="InnerBorder" Value="#D1DBF4FF"/>
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <!--<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
					<Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
					<Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
				</Trigger>-->
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Fill" TargetName="Bg" Value="{StaticResource MenuBackgroundHover}"/>
                <Setter Property="Stroke" TargetName="Bg" Value="{StaticResource MenuBorderHover}"/>
                <Setter Property="Stroke" TargetName="InnerBorder" Value="#FFFFFF"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="#FF9A9A9A"/>
                <Setter Property="Background" TargetName="GlyphPanel" Value="#EEE9E9"/>
                <Setter Property="BorderBrush" TargetName="GlyphPanel" Value="#DBD6D6"/>
                <Setter Property="Fill" TargetName="Glyph" Value="#848589"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type MenuItem}">
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Padding" Value="7,2,8,3"/>
                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Padding" Value="7,2,8,3"/>
                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Padding" Value="2,3,2,3"/>
                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Padding" Value="2,3,2,3"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="Separator">
        <Setter Property="Height" Value="1"/>
        <Setter Property="Margin" Value="30,4,0,4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Separator">
                    <Border BorderBrush="{StaticResource MenuBorder}"
	                  BorderThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- =====ProgressBar===== -->
    <DrawingBrush x:Key="ProgressBarIndicatorAnimatedFill">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing>
                    <GeometryDrawing.Geometry>
                        <RectangleGeometry Rect="0,0 1,1" />
                    </GeometryDrawing.Geometry>
                    <GeometryDrawing.Brush>
                        <RadialGradientBrush RadiusX="0.2" RadiusY="1" Center="0.5,1.2" GradientOrigin="0.5,1.2">
                            <RadialGradientBrush.GradientStops>
                                <GradientStop Color="#00000000" Offset="0"/>
                                <GradientStop Color="#FF000000" Offset="0.4"/>
                                <GradientStop Color="#00000000" Offset="1"/>
                            </RadialGradientBrush.GradientStops>
                            <RadialGradientBrush.RelativeTransform>
                                <TransformGroup/>
                            </RadialGradientBrush.RelativeTransform>
                        </RadialGradientBrush>
                    </GeometryDrawing.Brush>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>


    <Style TargetType="{x:Type ProgressBar}">
        <Setter Property="Foreground" Value="#01D328"/>
        <Setter Property="Background" Value="{StaticResource ProgressBarBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ProgressBarBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid SnapsToDevicePixels="true" x:Name="Background">
                        <Rectangle Fill="{TemplateBinding Background}" RadiusX="5" RadiusY="5"/>
                        <Rectangle Margin="1" x:Name="PART_Track"/>
                        <Decorator HorizontalAlignment="Left" Margin="1" x:Name="PART_Indicator">
                            <Grid x:Name="Foreground">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MaxWidth="15"/>
                                    <ColumnDefinition Width="0.1*"/>
                                    <ColumnDefinition MaxWidth="15"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Border x:Name="Indicator" Grid.ColumnSpan="3" Grid.RowSpan="2" Background="{StaticResource IndicatorBrush}" BorderThickness="0,1,1,0" Margin="-1" BorderBrush="{StaticResource ProgressBarBorderBrush}" CornerRadius="2"/>
                                <Border x:Name="Glass" Grid.ColumnSpan="3" Grid.RowSpan="2" Margin="1" Background="{StaticResource GlassBrush}" CornerRadius="2"/>
                                <Rectangle x:Name="Animation" Grid.ColumnSpan="3" Grid.RowSpan="2" Fill="#FFAA0000">
                                    <Rectangle.OpacityMask>
                                        <MultiBinding>
                                            <MultiBinding.Converter>
                                                <Microsoft_Windows_Themes:ProgressBarHighlightConverter/>
                                            </MultiBinding.Converter>
                                            <Binding Source="{StaticResource ProgressBarIndicatorAnimatedFill}"/>
                                            <Binding Path="ActualWidth" ElementName="Background"/>
                                            <Binding Path="ActualHeight" ElementName="Background"/>
                                        </MultiBinding>
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                                <Rectangle Fill="Transparent" RadiusX="1" RadiusY="1" Margin="1,1,0,1" x:Name="LeftDark" Grid.RowSpan="2"/>
                                <Rectangle Fill="Transparent" RadiusX="1" RadiusY="1" Margin="0,1,1,1" x:Name="RightDark" Grid.Column="2" Grid.RowSpan="2"/>
                                <Rectangle Fill="Transparent" x:Name="LeftLight" Grid.Column="0" Grid.Row="2"/>
                                <Rectangle Fill="Transparent" x:Name="CenterLight" Grid.Column="1" Grid.Row="2"/>
                                <Rectangle Fill="Transparent" x:Name="RightLight" Grid.Column="2" Grid.Row="2"/>
                            </Grid>
                        </Decorator>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2"/>
                        <Grid x:Name="GridValue" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Label Grid.Column="0" Padding="0" Foreground="White" Content="{TemplateBinding Value}" />
                            <Label Grid.Column="1" Padding="0" Foreground="White" Content="%" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="LayoutTransform" TargetName="Background">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="LayoutTransform" TargetName="PART_Track">
                                <Setter.Value>
                                    <RotateTransform Angle="90"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="LayoutTransform" TargetName="PART_Indicator">
                                <Setter.Value>
                                    <RotateTransform Angle="90"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="LayoutTransform" TargetName="Foreground">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="true">
                            <Setter Property="Visibility" TargetName="LeftDark" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="RightDark" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="LeftLight" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="CenterLight" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="RightLight" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
                            <Setter Property="Background" TargetName="Glass" Value="Transparent"/>
                            <Setter Property="Visibility" TargetName="GridValue" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="false">
                            <Setter Property="Fill" TargetName="Animation" Value="#FFAA0000"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- =====TabControl===== -->
    <Style TargetType="{x:Type TabControl}">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="4,4,4,4"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="#F9F9F9"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0"/>
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                            <RowDefinition x:Name="RowDefinition1" Height="*"/>
                        </Grid.RowDefinitions>
                        <TabPanel Margin="2,2,10,0" x:Name="HeaderPanel" Grid.Column="0" Grid.Row="0" IsItemsHost="true" Panel.ZIndex="1" KeyboardNavigation.TabIndex="1"/>
                        <Border x:Name="ContentPanel" Grid.Column="0" Grid.Row="1" BorderBrush="{StaticResource TabControlOuterBorder}" BorderThickness="1" CornerRadius="0,4,4,4">
                            <Border x:Name="InnerBd" Background="{StaticResource TabControlBackground}" BorderBrush="{StaticResource TabControlInnerBorder}" BorderThickness="1" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local" CornerRadius="0,3,3,3">
                                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="{TemplateBinding Padding}" x:Name="PART_SelectedContentHost" ContentSource="SelectedContent"/>
                            </Border>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            <Setter Property="BorderBrush" TargetName="ContentPanel" Value="{StaticResource TabControlOuterBorderDisabled}"/>
                            <Setter Property="BorderBrush" TargetName="InnerBd" Value="{StaticResource TabControlInnerBorderDisabled}"/>
                            <Setter Property="Background" TargetName="InnerBd" Value="{StaticResource TabControlDisabledBackground}"/>
                            <Setter Property="Foreground" Value="{StaticResource TabControlInnerBorderDisabled}"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1"/>
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                            <Setter Property="Margin" TargetName="HeaderPanel" Value="2,0,2,2"/>
                            <Setter Property="CornerRadius" TargetName="ContentPanel" Value="4,4,4,0"/>
                            <Setter Property="CornerRadius" TargetName="InnerBd" Value="3,3,3,0"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            <Setter Property="Margin" TargetName="HeaderPanel" Value="0,2,2,2"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1"/>
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            <Setter Property="Margin" TargetName="HeaderPanel" Value="0,2,2,2"/>
                            <Setter Property="CornerRadius" TargetName="ContentPanel" Value="4,0,4,4"/>
                            <Setter Property="CornerRadius" TargetName="InnerBd" Value="3,0,3,3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- =====TabItem===== -->
    <Style x:Key="TabItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle SnapsToDevicePixels="true" Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1" Margin="3,3,3,1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Disabled-->

    <Style TargetType="{x:Type TabItem}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource TabItemFocusVisual}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="6,0,6,0"/>
        <Setter Property="BorderBrush" Value="{StaticResource TabControlNormalBorderBrush}"/>
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid SnapsToDevicePixels="true" RenderTransformOrigin="1,1" x:Name="grid">
                        <Grid.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                                <SkewTransform AngleX="0" AngleY="0"/>
                                <RotateTransform Angle="0"/>
                                <TranslateTransform X="0" Y="0"/>
                            </TransformGroup>
                        </Grid.RenderTransform>
                        <Border x:Name="OuterBd" BorderBrush="{StaticResource TabControlOuterBorder}" BorderThickness="1,1,1,0" CornerRadius="4,4,0,0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Border Grid.Row="0" Grid.Column="0" x:Name="Bd" Background="{StaticResource TabItemBackground}" BorderBrush="{StaticResource TabControlInnerBorder}" CornerRadius="3,0,0,0" BorderThickness="1,1,0,0" Padding="3,0,1,2">
                                    <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" x:Name="Content" VerticalAlignment="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" ContentSource="Header" RecognizesAccessKey="True"/>
                                </Border>
                                <Border x:Name="BdSide" Grid.Row="0" Grid.Column="1" Width="10" Background="{StaticResource TabItemSideBackground}" BorderBrush="{StaticResource TabItemSideBorderBrush}" CornerRadius="0,3,0,0" BorderThickness="1,0,0,0"/>
                            </Grid>
                        </Border>
                        <Border x:Name="BdGlass" Margin="2" CornerRadius="3,3,0,0" Background="{StaticResource TabItemGlassBrush}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource TabItemHoverBackground}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Panel.ZIndex" Value="1"/>
                            <Setter Property="Margin" TargetName="OuterBd" Value="0,1,0,-1"/>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource TabItemHoverBackground}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="BdSide" Value="{StaticResource TabItemSideDisabledBackground}"/>
                            <Setter Property="BorderBrush" TargetName="BdSide" Value="{StaticResource TabItemSideDisabledBorderBrush}"/>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource TabItemDisabledBackground}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource TabControlInnerBorderDisabled}"/>
                            <Setter Property="BorderBrush" TargetName="OuterBd" Value="{StaticResource TabControlOuterBorderDisabled}"/>
                            <Setter Property="Foreground" Value="{StaticResource TabControlOuterBorderDisabled}"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Margin" Value="2,0,-2,0"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="90"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="BorderThickness" TargetName="OuterBd" Value="1,0,1,1"/>
                            <Setter Property="CornerRadius" TargetName="OuterBd" Value="0,0,4,4"/>
                            <Setter Property="CornerRadius" TargetName="BdSide" Value="0,0,3,0"/>
                            <Setter Property="CornerRadius" TargetName="Bd" Value="0,0,0,3"/>
                            <Setter Property="BorderThickness" TargetName="Bd" Value="1,0,0,1"/>
                            <Setter Property="CornerRadius" TargetName="BdGlass" Value="0"/>
                            <Setter Property="Margin" TargetName="BdGlass" Value="2,0,2,0"/>
                            <Setter Property="Background" TargetName="BdSide" Value="{StaticResource TabItemSideBackgroundBottom}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Top"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="-2,-2,-2,-1"/>
                            <Setter Property="Margin" TargetName="Content" Value="0,0,0,1"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Bottom"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="-2,-1,-2,-2"/>
                            <Setter Property="Margin" TargetName="Content" Value="0,1,0,0"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Left"/>
                            </MultiTrigger.Conditions>

                            <Setter Property="Margin" Value="-2,-2,-1,-2"/>
                            <Setter Property="Margin" TargetName="Content" Value="0,0,1,0"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Right"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="-1,-2,-2,-2"/>
                            <Setter Property="Margin" TargetName="Content" Value="1,0,0,0"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- =====TextBox===== -->
    <Style BasedOn="{x:Null}" TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="LightGray"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="Bd" Background="{StaticResource NormalBackground}" CornerRadius="3">
                        <ScrollViewer SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" x:Name="PART_ContentHost"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource FocusedBorder}"/>
                            <Setter TargetName="Bd" Property="BorderThickness" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type RichTextBox}" BasedOn="{StaticResource {x:Type TextBox}}" TargetType="{x:Type RichTextBox}">
        <Style.Resources>
            <Style x:Key="{x:Type FlowDocument}"
           TargetType="{x:Type FlowDocument}">
                <Setter Property="OverridesDefaultStyle"
            Value="true"/>
            </Style>
        </Style.Resources>
    </Style>

    <!-- SimpleStyles: PasswordBox -->
    <Style x:Key="{x:Type PasswordBox}" TargetType="{x:Type PasswordBox}">
        <Setter Property="Foreground" Value="LightGray"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border x:Name="Bd" Background="{StaticResource NormalBackground}" CornerRadius="3">
                        <ScrollViewer SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" x:Name="PART_ContentHost"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource FocusedBorder}"/>
                            <Setter TargetName="Bd" Property="BorderThickness" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- =====ToolTip===== -->
    <Style TargetType="{x:Type ToolTip}">
        <Setter Property = "HorizontalOffset" Value="0"/>
        <Setter Property = "VerticalOffset" Value="0"/>
        <Setter Property = "Foreground" Value="{StaticResource NormalInnerBorder}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolTip}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Border Grid.Row="1" x:Name="Bd" Background="{StaticResource BackgroundBrush}" CornerRadius="4" BorderThickness="1" BorderBrush="{StaticResource NormalOuterBorder}">
                            <Border x:Name="InnerBd" CornerRadius="3" BorderThickness="1" BorderBrush="{StaticResource NormalInnerBorder}">
                                <ContentPresenter Margin="5,3,5,3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" x:Name="ContentHost"/>
                            </Border>
                        </Border>

                        <Canvas Grid.Row="0" x:Name="Arrow" Width="10" Height="10" Canvas.Left="0" Canvas.Top="0" HorizontalAlignment="Left" Margin="5,0,0,-2">
                            <Path Width="10" Height="10" Canvas.Left="0" Canvas.Top="0" Stretch="Fill" StrokeThickness="1" StrokeLineJoin="Round" Stroke="{StaticResource NormalOuterBorder}" Fill="#c2c2c2" Data="F1 M 0,10L 0,0L 10,10"/>
                            <Path Width="8" Height="10" Canvas.Left="1" Canvas.Top="1" Stretch="Fill" StrokeThickness="1" StrokeLineJoin="Round" Stroke="{StaticResource NormalInnerBorder}" Fill="#c2c2c2" Data="F1 M 1,8L 1,1L 7,8"/>
                        </Canvas>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- =====TreeView===== -->
    <Style TargetType="{x:Type TreeView}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ListBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeView}">
                    <Border SnapsToDevicePixels="true" x:Name="Bd" BorderBrush="{StaticResource NormalOuterBorder}" BorderThickness="1" Background="{StaticResource NormalBackground}" CornerRadius="4">
                        <ScrollViewer Focusable="false" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Background="Transparent" Padding="{TemplateBinding Padding}" CanContentScroll="false" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                            <ItemsPresenter/>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TreeViewItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z"/>
    <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Width="16" Height="16" Background="Transparent" Padding="5,5,5,5">
                        <Path Fill="Transparent" Stroke="#FF989898" x:Name="ExpandPath" Data="{StaticResource TreeArrow}">
                            <Path.RenderTransform>
                                <RotateTransform Angle="135" CenterX="3" CenterY="3"/>
                            </Path.RenderTransform>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF1BBBFA"/>
                            <Setter Property="Fill" TargetName="ExpandPath" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="RenderTransform" TargetName="ExpandPath">
                                <Setter.Value>
                                    <RotateTransform Angle="180" CenterX="3" CenterY="3"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Fill" TargetName="ExpandPath" Value="#FF595959"/>
                            <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF262626"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding" Value="1,0,0,0"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="19" Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <Border Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="0" SnapsToDevicePixels="true" x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                        </Border>


                        <ToggleButton x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" ClickMode="Press" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <Border Grid.Column="1">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" x:Name="PART_Header" ContentSource="Header"/>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" Grid.Column="1" Grid.ColumnSpan="3" Grid.Row="1"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource ClickBackground}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource OverBackground}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="IsSelectionActive" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>