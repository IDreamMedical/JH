<Application x:Class="JinHong.App" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
             xmlns:pf="http://schemas.uniguy.com/presentation"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             StartupUri="MainWindow.xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" d1p1:Ignorable="d" 
             xmlns:d1p1="http://schemas.openxmlformats.org/markup-compatibility/2006">
  <Application.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/JinHong;component/Themes/Icons.xaml">
        </ResourceDictionary>
        <ResourceDictionary Source="/JinHong;component/Themes/Shared.xaml">
          <vm:ViewModelLocator x:Key="Locator" d:IsDataSource="True" xmlns:vm="clr-namespace:JinHong.ViewModel" />
        </ResourceDictionary>
      </ResourceDictionary.MergedDictionaries>
      <SolidColorBrush x:Key="ScbEditingForeground" Color="#FF0000FF" />
      <SolidColorBrush x:Key="ItemSelectionBackground" Color="DarkBlue" />
      <SolidColorBrush x:Key="ItemMouseOverBackground" Color="LightBlue" />
      <SolidColorBrush x:Key="ScbAlternating" Color="#77DDDDDD" />
      <SolidColorBrush x:Key="ScbAlternatingLightBlue" Color="#77AAAAFF" />
      <SolidColorBrush x:Key="ScbAlternatingLightGreen" Color="#77AAFFAA" />
      <!-- ListView 排序有关 -->
      <DataTemplate x:Key="DtAscending">
        <StackPanel>
          <Path Data="M 0,0 L 8,0 L 4,4 Z" HorizontalAlignment="Center" VerticalAlignment="Top" Fill="Gray" />
          <ContentPresenter ContentTemplate="{x:Null}" />
        </StackPanel>
      </DataTemplate>
      <DataTemplate x:Key="DtDescending">
        <StackPanel>
          <Path Data="M 0,4 L 8,4 L 4,0 Z" HorizontalAlignment="Center" VerticalAlignment="Top" Fill="Gray" />
          <ContentPresenter ContentTemplate="{x:Null}" />
        </StackPanel>
      </DataTemplate>
      <pf:GridViewSortHandler x:Key="Gvsh" ColumnHeaderSortedAscendingTemplate="DtAscending" ColumnHeaderSortedDescendingTemplate="DtDescending" />
      <!-- Resources scoped at the Application level should be defined here. -->
      <ControlTemplate x:Key="validationTemplate">
        <Grid>
          <AdornedElementPlaceholder />
          <Border BorderBrush="{x:Static Brushes.Red}" BorderThickness=".5" />
          <Path Data="M 0,8 L 8,8 L 8,0 Z" Fill="{x:Static Brushes.Red}" HorizontalAlignment="Right" VerticalAlignment="Bottom" />
        </Grid>
      </ControlTemplate>
      <Style x:Key="textBoxInError" TargetType="{x:Type TextBox}">
        <Style.Triggers>
          <Trigger Property="Validation.HasError" Value="true">
            <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self},&#xD;&#xA;                            Path=(Validation.Errors)[0].ErrorContent}" />
          </Trigger>
        </Style.Triggers>
      </Style>
      <Style x:Key="comboBoxInError" TargetType="{x:Type ComboBox}">
        <Style.Triggers>
          <Trigger Property="Validation.HasError" Value="true">
            <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self},&#xD;&#xA;                            Path=(Validation.Errors)[0].ErrorContent}" />
          </Trigger>
        </Style.Triggers>
      </Style>
      <!-- global styles -->
      <Style TargetType="{x:Type HeaderedContentControl}">
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="HeaderedContentControl">
              <DockPanel>
                <ContentPresenter DockPanel.Dock="Top" ContentSource="Header" />
                <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
              </DockPanel>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <Style TargetType="{x:Type ListBox}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="BorderBrush" Value="Gray" />
      </Style>
      <Style TargetType="{x:Type ListBoxItem}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Style.Triggers>
          <Trigger Property="ItemsControl.AlternationIndex" Value="1">
            <Setter Property="Background" Value="{StaticResource ScbAlternating}" />
          </Trigger>
          <Trigger Property="IsSelected" Value="True">
            <Setter Property="Background" Value="{StaticResource ItemSelectionBackground}" />
            <Setter Property="Foreground" Value="White" />
          </Trigger>
          <Trigger Property="IsMouseOver" Value="True">
            <Setter Property="Background" Value="{StaticResource ItemMouseOverBackground}" />
          </Trigger>
        </Style.Triggers>
      </Style>
      <Style TargetType="{x:Type ListView}">
        <Setter Property="AlternationCount" Value="2" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="pf:GridViewSortHandler.GridViewSortHandler" Value="{StaticResource Gvsh}" />
        <Setter Property="pf:GridViewSortHandler.CustomComparer">
          <Setter.Value>
            <pf:DefaultListViewComparer />
          </Setter.Value>
        </Setter>
      </Style>
      <Style TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="Background" Value="Transparent" />
      </Style>
      <Style TargetType="{x:Type ListViewItem}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Style.Triggers>
          <Trigger Property="ItemsControl.AlternationIndex" Value="1">
            <Setter Property="Background" Value="{StaticResource ScbAlternating}" />
          </Trigger>
          <Trigger Property="IsSelected" Value="True">
            <Setter Property="Background" Value="{StaticResource ItemSelectionBackground}" />
            <Setter Property="Foreground" Value="White" />
          </Trigger>
          <Trigger Property="IsMouseOver" Value="True">
            <Setter Property="Background" Value="{StaticResource ItemMouseOverBackground}" />
          </Trigger>
        </Style.Triggers>
      </Style>
      <Style TargetType="{x:Type DataGrid}">
        <Setter Property="AlternationCount" Value="2" />
        <Setter Property="GridLinesVisibility" Value="None" />
      </Style>
      <Style TargetType="{x:Type DataGridRow}">
        <Style.Triggers>
          <Trigger Property="ItemsControl.AlternationIndex" Value="1">
            <Setter Property="Background" Value="{StaticResource ScbAlternating}" />
          </Trigger>
        </Style.Triggers>
      </Style>
      <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource textBoxInError}">
        <Setter Property="BorderThickness" Value=".5" />
        <Setter Property="BorderBrush" Value="Gray" />
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource validationTemplate}" />
        <Setter Property="pf:SelectAllOnFocusBehavior.IsEnabled" Value="True" />
        <Style.Triggers>
          <Trigger Property="IsEnabled" Value="True">
            <Setter Property="Foreground" Value="{StaticResource ScbEditingForeground}" />
          </Trigger>
        </Style.Triggers>
      </Style>
      <Style TargetType="{x:Type PasswordBox}">
        <Setter Property="BorderThickness" Value=".5" />
        <Setter Property="BorderBrush" Value="Gray" />
        <Setter Property="pf:SelectAllOnFocusBehavior.IsEnabled" Value="True" />
        <Style.Triggers>
          <Trigger Property="IsEnabled" Value="True">
            <Setter Property="Foreground" Value="{StaticResource ScbEditingForeground}" />
          </Trigger>
        </Style.Triggers>
      </Style>
      <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource comboBoxInError}">
        <Setter Property="BorderThickness" Value=".5" />
        <Setter Property="BorderBrush" Value="Gray" />
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource validationTemplate}" />
        <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True" />
        <Setter Property="ItemsPanel">
          <Setter.Value>
            <ItemsPanelTemplate>
              <VirtualizingStackPanel IsItemsHost="True" />
            </ItemsPanelTemplate>
          </Setter.Value>
        </Setter>
        <Style.Triggers>
          <Trigger Property="IsEnabled" Value="True">
            <Setter Property="Foreground" Value="{StaticResource ScbEditingForeground}" />
          </Trigger>
        </Style.Triggers>
      </Style>
      <Style TargetType="{x:Type xctk:DateTimePicker}">
        <Setter Property="BorderThickness" Value=".5" />
        <Setter Property="BorderBrush" Value="Gray" />
        <Setter Property="ShowButtonSpinner" Value="False" />
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="AutoCloseCalendar" Value="False" />
        <Style.Triggers>
          <Trigger Property="IsEnabled" Value="True">
            <Setter Property="Foreground" Value="{StaticResource ScbEditingForeground}" />
          </Trigger>
        </Style.Triggers>
      </Style>
      <Style TargetType="{x:Type xctk:CheckComboBox}">
        <Setter Property="BorderThickness" Value=".5" />
        <Setter Property="BorderBrush" Value="Gray" />
        <Style.Triggers>
          <Trigger Property="IsEnabled" Value="True">
            <Setter Property="Foreground" Value="{StaticResource ScbEditingForeground}" />
          </Trigger>
        </Style.Triggers>
      </Style>
      <Style TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="2,0" />
      </Style>
      <!-- TODO other control error styles...-->
      <Style x:Key="iconImageStyle" TargetType="{x:Type Image}">
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="16" />
        <Style.Triggers>
          <Trigger Property="IsEnabled" Value="false">
            <Setter Property="Opacity" Value=".5" />
          </Trigger>
        </Style.Triggers>
      </Style>
    </ResourceDictionary>
  </Application.Resources>
</Application>